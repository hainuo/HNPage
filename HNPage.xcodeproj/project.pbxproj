// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 55;
	objects = {

/* Begin PBXBuildFile section */
		CF4D492CC7C4C79AF689F794 /* Pods_HNPage.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E7280E9C85A115925D28F1EF /* Pods_HNPage.framework */; };
		FC2B3F1F2796A3540050C157 /* FeedExploreVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC2B3F1E2796A3540050C157 /* FeedExploreVC.swift */; };
		FC2B3F212796AA300050C157 /* FeedSingleVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC2B3F202796AA300050C157 /* FeedSingleVC.swift */; };
		FC2B3F232796B9910050C157 /* NovelEntranceVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC2B3F222796B9910050C157 /* NovelEntranceVC.swift */; };
		FC347999278D65D80060E220 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC347998278D65D80060E220 /* AppDelegate.swift */; };
		FC34799D278D65D80060E220 /* ViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC34799C278D65D80060E220 /* ViewController.swift */; };
		FC3479A3278D65D80060E220 /* HNPage.xcdatamodeld in Sources */ = {isa = PBXBuildFile; fileRef = FC3479A1278D65D80060E220 /* HNPage.xcdatamodeld */; };
		FC3479A5278D65DA0060E220 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = FC3479A4278D65DA0060E220 /* Assets.xcassets */; };
		FC3479A8278D65DA0060E220 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = FC3479A6278D65DA0060E220 /* LaunchScreen.storyboard */; };
		FC3479B2278D78B30060E220 /* Utils.swift in Sources */ = {isa = PBXBuildFile; fileRef = FC3479B1278D78B30060E220 /* Utils.swift */; };
		FC3479B4278D7BB40060E220 /* SDK_Setting_5258348.json in Resources */ = {isa = PBXBuildFile; fileRef = FC3479B3278D7BB40060E220 /* SDK_Setting_5258348.json */; };
		FCBA2BC827911E37006A2D9B /* VideoCardSingle.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCBA2BC727911E37006A2D9B /* VideoCardSingle.swift */; };
		FCBA2BCA27915C4C006A2D9B /* VideoCard.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCBA2BC927915C4C006A2D9B /* VideoCard.swift */; };
		FCD06ECB2794FFEE00767ABE /* PushDemoViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCD06ECA2794FFEE00767ABE /* PushDemoViewController.swift */; };
		FCD06ECF27952C7800767ABE /* FeedTVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCD06ECE27952C7800767ABE /* FeedTVC.swift */; };
		FCD06ED227953D5000767ABE /* NewsVCViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCD06ED127953D5000767ABE /* NewsVCViewController.swift */; };
		FCD06ED427954FC500767ABE /* ProfileVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCD06ED327954FC500767ABE /* ProfileVC.swift */; };
		FCDB9C43278EBDE500B8BF17 /* Provider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCDB9C42278EBDE500B8BF17 /* Provider.swift */; };
		FCDB9C45278ED2BA00B8BF17 /* Model.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCDB9C44278ED2BA00B8BF17 /* Model.swift */; };
		FCDB9C48278ED7EC00B8BF17 /* ChenjinshiVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCDB9C47278ED7EC00B8BF17 /* ChenjinshiVC.swift */; };
		FCDB9C4D278EEEB400B8BF17 /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = FCDB9C4B278EEEB400B8BF17 /* Main.storyboard */; };
		FCDB9C50278EF16B00B8BF17 /* MediaTVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCDB9C4F278EF16B00B8BF17 /* MediaTVC.swift */; };
		FCE28E4D27995298000A493B /* NovelSearchResultVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCE28E4C27995298000A493B /* NovelSearchResultVC.swift */; };
		FCED6C8F278FF12D006187CA /* NovelTVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCED6C8E278FF12D006187CA /* NovelTVC.swift */; };
		FCED6C91278FF245006187CA /* JiugonggeVC.swift in Sources */ = {isa = PBXBuildFile; fileRef = FCED6C90278FF245006187CA /* JiugonggeVC.swift */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		08ADA2DDD73EB1280AC64621 /* Pods-HNPage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HNPage.release.xcconfig"; path = "Target Support Files/Pods-HNPage/Pods-HNPage.release.xcconfig"; sourceTree = "<group>"; };
		CD0CD9B496FEE3C323E79EEF /* Pods-HNPage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HNPage.debug.xcconfig"; path = "Target Support Files/Pods-HNPage/Pods-HNPage.debug.xcconfig"; sourceTree = "<group>"; };
		E7280E9C85A115925D28F1EF /* Pods_HNPage.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_HNPage.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		FC2B3F1E2796A3540050C157 /* FeedExploreVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FeedExploreVC.swift; sourceTree = "<group>"; };
		FC2B3F202796AA300050C157 /* FeedSingleVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FeedSingleVC.swift; sourceTree = "<group>"; };
		FC2B3F222796B9910050C157 /* NovelEntranceVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NovelEntranceVC.swift; sourceTree = "<group>"; };
		FC347995278D65D80060E220 /* HNPage.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HNPage.app; sourceTree = BUILT_PRODUCTS_DIR; };
		FC347998278D65D80060E220 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		FC34799C278D65D80060E220 /* ViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewController.swift; sourceTree = "<group>"; };
		FC3479A2278D65D80060E220 /* HNPage.xcdatamodel */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcdatamodel; path = HNPage.xcdatamodel; sourceTree = "<group>"; };
		FC3479A4278D65DA0060E220 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		FC3479A7278D65DA0060E220 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
		FC3479A9278D65DA0060E220 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		FC3479B0278D6DD40060E220 /* HNPage-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "HNPage-Bridging-Header.h"; sourceTree = "<group>"; };
		FC3479B1278D78B30060E220 /* Utils.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utils.swift; sourceTree = "<group>"; };
		FC3479B3278D7BB40060E220 /* SDK_Setting_5258348.json */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.json; path = SDK_Setting_5258348.json; sourceTree = "<group>"; };
		FCBA2BC727911E37006A2D9B /* VideoCardSingle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VideoCardSingle.swift; sourceTree = "<group>"; };
		FCBA2BC927915C4C006A2D9B /* VideoCard.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VideoCard.swift; sourceTree = "<group>"; };
		FCD06ECA2794FFEE00767ABE /* PushDemoViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PushDemoViewController.swift; sourceTree = "<group>"; };
		FCD06ECC2795127F00767ABE /* HNPage.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = HNPage.entitlements; sourceTree = "<group>"; };
		FCD06ECE27952C7800767ABE /* FeedTVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FeedTVC.swift; sourceTree = "<group>"; };
		FCD06ED127953D5000767ABE /* NewsVCViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NewsVCViewController.swift; sourceTree = "<group>"; };
		FCD06ED327954FC500767ABE /* ProfileVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ProfileVC.swift; sourceTree = "<group>"; };
		FCDB9C42278EBDE500B8BF17 /* Provider.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Provider.swift; sourceTree = "<group>"; };
		FCDB9C44278ED2BA00B8BF17 /* Model.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Model.swift; sourceTree = "<group>"; };
		FCDB9C47278ED7EC00B8BF17 /* ChenjinshiVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ChenjinshiVC.swift; sourceTree = "<group>"; };
		FCDB9C4C278EEEB400B8BF17 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
		FCDB9C4F278EF16B00B8BF17 /* MediaTVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MediaTVC.swift; sourceTree = "<group>"; };
		FCE28E4C27995298000A493B /* NovelSearchResultVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NovelSearchResultVC.swift; sourceTree = "<group>"; };
		FCED6C8E278FF12D006187CA /* NovelTVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NovelTVC.swift; sourceTree = "<group>"; };
		FCED6C90278FF245006187CA /* JiugonggeVC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JiugonggeVC.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		FC347992278D65D80060E220 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CF4D492CC7C4C79AF689F794 /* Pods_HNPage.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		18DA8A2D1D561CB3F51422BE /* Pods */ = {
			isa = PBXGroup;
			children = (
				CD0CD9B496FEE3C323E79EEF /* Pods-HNPage.debug.xcconfig */,
				08ADA2DDD73EB1280AC64621 /* Pods-HNPage.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		A52D70E6A47DAE7C9A712051 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				E7280E9C85A115925D28F1EF /* Pods_HNPage.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		FC34798C278D65D80060E220 = {
			isa = PBXGroup;
			children = (
				FC3479B0278D6DD40060E220 /* HNPage-Bridging-Header.h */,
				FC347997278D65D80060E220 /* HNPage */,
				FC347996278D65D80060E220 /* Products */,
				18DA8A2D1D561CB3F51422BE /* Pods */,
				A52D70E6A47DAE7C9A712051 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		FC347996278D65D80060E220 /* Products */ = {
			isa = PBXGroup;
			children = (
				FC347995278D65D80060E220 /* HNPage.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		FC347997278D65D80060E220 /* HNPage */ = {
			isa = PBXGroup;
			children = (
				FCD06ECC2795127F00767ABE /* HNPage.entitlements */,
				FCDB9C4B278EEEB400B8BF17 /* Main.storyboard */,
				FCDB9C46278ED7B500B8BF17 /* Controllers */,
				FC3479AF278D663C0060E220 /* Support Files */,
				FC3479A6278D65DA0060E220 /* LaunchScreen.storyboard */,
				FC3479A1278D65D80060E220 /* HNPage.xcdatamodeld */,
			);
			path = HNPage;
			sourceTree = "<group>";
		};
		FC3479AF278D663C0060E220 /* Support Files */ = {
			isa = PBXGroup;
			children = (
				FCDB9C41278EBDCA00B8BF17 /* Moya */,
				FC3479B3278D7BB40060E220 /* SDK_Setting_5258348.json */,
				FC3479A9278D65DA0060E220 /* Info.plist */,
				FC347998278D65D80060E220 /* AppDelegate.swift */,
				FC3479A4278D65DA0060E220 /* Assets.xcassets */,
				FC3479B1278D78B30060E220 /* Utils.swift */,
			);
			name = "Support Files";
			sourceTree = "<group>";
		};
		FCBA2BCB27916822006A2D9B /* VideoCard */ = {
			isa = PBXGroup;
			children = (
				FCBA2BC927915C4C006A2D9B /* VideoCard.swift */,
				FCBA2BC727911E37006A2D9B /* VideoCardSingle.swift */,
			);
			name = VideoCard;
			sourceTree = "<group>";
		};
		FCD06ECD2795213A00767ABE /* Feed */ = {
			isa = PBXGroup;
			children = (
				FCD06ECE27952C7800767ABE /* FeedTVC.swift */,
				FC2B3F1E2796A3540050C157 /* FeedExploreVC.swift */,
				FC2B3F202796AA300050C157 /* FeedSingleVC.swift */,
			);
			name = Feed;
			sourceTree = "<group>";
		};
		FCD06ED027953CD900767ABE /* HotNews */ = {
			isa = PBXGroup;
			children = (
				FCD06ED127953D5000767ABE /* NewsVCViewController.swift */,
			);
			name = HotNews;
			sourceTree = "<group>";
		};
		FCDB9C41278EBDCA00B8BF17 /* Moya */ = {
			isa = PBXGroup;
			children = (
				FCDB9C42278EBDE500B8BF17 /* Provider.swift */,
				FCDB9C44278ED2BA00B8BF17 /* Model.swift */,
			);
			name = Moya;
			sourceTree = "<group>";
		};
		FCDB9C46278ED7B500B8BF17 /* Controllers */ = {
			isa = PBXGroup;
			children = (
				FCED6C8D278FF05A006187CA /* Novel */,
				FCDB9C4E278EF05800B8BF17 /* Media */,
				FC34799C278D65D80060E220 /* ViewController.swift */,
			);
			name = Controllers;
			sourceTree = "<group>";
		};
		FCDB9C4E278EF05800B8BF17 /* Media */ = {
			isa = PBXGroup;
			children = (
				FCD06ED027953CD900767ABE /* HotNews */,
				FCD06ECD2795213A00767ABE /* Feed */,
				FCBA2BCB27916822006A2D9B /* VideoCard */,
				FCDB9C47278ED7EC00B8BF17 /* ChenjinshiVC.swift */,
				FCDB9C4F278EF16B00B8BF17 /* MediaTVC.swift */,
				FCED6C90278FF245006187CA /* JiugonggeVC.swift */,
				FCD06ECA2794FFEE00767ABE /* PushDemoViewController.swift */,
				FCD06ED327954FC500767ABE /* ProfileVC.swift */,
			);
			path = Media;
			sourceTree = "<group>";
		};
		FCED6C8D278FF05A006187CA /* Novel */ = {
			isa = PBXGroup;
			children = (
				FCED6C8E278FF12D006187CA /* NovelTVC.swift */,
				FC2B3F222796B9910050C157 /* NovelEntranceVC.swift */,
				FCE28E4C27995298000A493B /* NovelSearchResultVC.swift */,
			);
			path = Novel;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		FC347994278D65D80060E220 /* HNPage */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FC3479AC278D65DA0060E220 /* Build configuration list for PBXNativeTarget "HNPage" */;
			buildPhases = (
				C90E3516922D23F846210392 /* [CP] Check Pods Manifest.lock */,
				FC347991278D65D80060E220 /* Sources */,
				FC347992278D65D80060E220 /* Frameworks */,
				FC779F912797BBB6006EA885 /* ShellScript */,
				FC347993278D65D80060E220 /* Resources */,
				A60C287CD534F9DD961EE6CA /* [CP] Embed Pods Frameworks */,
				4AFCEF792AB9ABCD92C90657 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HNPage;
			productName = HNPage;
			productReference = FC347995278D65D80060E220 /* HNPage.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		FC34798D278D65D80060E220 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1320;
				LastUpgradeCheck = 1320;
				TargetAttributes = {
					FC347994278D65D80060E220 = {
						CreatedOnToolsVersion = 13.2.1;
					};
				};
			};
			buildConfigurationList = FC347990278D65D80060E220 /* Build configuration list for PBXProject "HNPage" */;
			compatibilityVersion = "Xcode 13.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = FC34798C278D65D80060E220;
			productRefGroup = FC347996278D65D80060E220 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				FC347994278D65D80060E220 /* HNPage */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		FC347993278D65D80060E220 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FC3479A8278D65DA0060E220 /* LaunchScreen.storyboard in Resources */,
				FC3479B4278D7BB40060E220 /* SDK_Setting_5258348.json in Resources */,
				FC3479A5278D65DA0060E220 /* Assets.xcassets in Resources */,
				FCDB9C4D278EEEB400B8BF17 /* Main.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		4AFCEF792AB9ABCD92C90657 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		A60C287CD534F9DD961EE6CA /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-HNPage/Pods-HNPage-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		C90E3516922D23F846210392 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-HNPage-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		FC779F912797BBB6006EA885 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n\n# APMInsight SDK资源文件路径，$PODS_ROOT是工程的Pods根路径，如果没有使用Cocoapods请修改此路径\nAPMSDKAssetCrashPath=\"${PODS_ROOT}/RangersAPM/RangersAPM/Assets/Crash\"\naddressRangeFileName=\"${APMSDKAssetCrashPath}/APMInsightCrash.bundle/APMInsightSDKAddressRange.plist\"\n\n# 每次执行脚本前，删除</dict>之后的所有行，输出地址后再补充token，需要确保plist中只有一层Dict\n# 为什么不每次直接重新写plist头，覆盖之前的？多架构时会覆盖之前的架构\n# 有可能存在中断编译导致写的plist文件格式错误，这里判断一下\nplistLineNum=0\nkeysLineNum=()\narrayStartLineNum=()\narrayEndLineNum=()\nwhile read line\ndo\n    ((plistLineNum++))\n\n    if [[ $line =~ \"<key>\" ]]; then\n        keysLineNum[${#keysLineNum[@]}]=$plistLineNum\n    elif [[ $line =~ \"<array>\" ]]; then\n        arrayStartLineNum[${#arrayStartLineNum[@]}]=$plistLineNum\n    elif [[ $line =~ \"</array>\" ]]; then\n        arrayEndLineNum[${#arrayEndLineNum[@]}]=$plistLineNum\n    fi\ndone < \"${addressRangeFileName}\"\n\nerrorCount=$[${#keysLineNum[@]}-${#arrayEndLineNum[@]}]\nif [[ ${errorCount} -gt 0 ]]; then\n    errorLineNum=${keysLineNum[$[${#keysLineNum[@]}-${errorCount}]]}\n    sed -i \"\" \"${errorLineNum},\\$d\" \"${addressRangeFileName}\"\nelse\n    sed -i \"\" '/^<\\/dict>/,$d' \"${addressRangeFileName}\"\nfi\n\n# 合并地址区间 Private 不要手动调用此方法\n# $1:InputFile $2:OutputFile\n# 原方案合并区间时，每次用上一次记录的 起地址与大小求和 与 当前的起地址 比较，计算量较大，性能较差\n# 新方案在过滤SDK symbols时同时输出行号，每次比较时判断行号是否连续即可。\n# Tips：LinkMap Symbols中行号连续的地址一定是连续的。\nfunction combineAddresses(){\n    lastLineNum=\"0000\"\n    startAddress=\"0x0000\"\n    lastAddr=\"0x0000\"\n    lastSize=\"0x0000\"\n    while read line\n    do\n        read tmpLineNum tmpAddr tmpSize <<< $(echo $(echo ${line} | awk -F \"[: ]\" '{print $1\" \"$2\" \"$3}'))\n\n        if [[ \"${lastLineNum}\" == \"0000\" ]]; then\n            startAddress=${tmpAddr}\n        else\n            if [[ ! \"${tmpLineNum}\" == \"$[${lastLineNum}+1]\" ]]; then\n                endAddress=`printf \"0x%08x\" $((${lastAddr}+${lastSize}))`\n                echo \"${lastLineNum}:${startAddress} ${endAddress}\" >> \"$2\"\n                startAddress=${tmpAddr}\n            fi\n        fi\n\n        lastLineNum=${tmpLineNum}\n        lastAddr=${tmpAddr}\n        lastSize=${tmpSize}\n    done < \"$1\"\n\n    if [[ ! \"${startAddress}\" == \"0x0000\"  ]];\n    then\n        endAddress=`printf \"0x%08x\" $((${lastAddr}+${lastSize}))`\n        echo \"${lastLineNum}:${startAddress} ${endAddress}\" >> \"$2\"\n    fi\n\n}\n\n# 处理LinkMapFile，获取SDK地址区间 Private 不要手动调用此方法\n# $1:SDKName $2:SDKAid $3:LinkMapFilePath $4:CPUArchitecture\nfunction writeAddressRangeFileFromLinkMap(){\n\n    if [[ ! -f \"$3\" ]]; then\n        echo \"LinkMap for $4 not found!!!\"\n        return\n    fi\n\n    OBJSTART=`date +%s`;\n\n    # 保存SDK的object files\n    objectFile=\"${APMSDKAssetCrashPath}/APMInsightSDKAddressRangeTmp1.txt\"\n    if [[ -f \"$objectFile\" ]]; then\n        rm \"${objectFile}\"\n    fi\n    touch \"${objectFile}\"\n\n    grep -E \"^\\[.*\\].*\\/($1)\\/.*\" $3 >> \"${objectFile}\"\n\n    OBJEND=`date +%s`;\n    OBJTime=$((OBJEND-OBJSTART))\n    echo \"Grep object files cost $OBJTime s\"\n\n    # 保存SDK的Symbols\n    symbolFile=\"${APMSDKAssetCrashPath}/APMInsightSDKAddressRangeTmp2.txt\"\n    if [[ -f \"$symbolFile\" ]]; then\n        rm \"${symbolFile}\"\n    fi\n    touch \"${symbolFile}\"\n\n    # 过滤出Symbols\n    symbolsLineNum=$(grep -E -n \"# Symbols:\" $3 | head -1 | cut -d \":\" -f 1)\n    deadLineNum=$(grep -E -n \"# Dead Stripped Symbols:\" $3 | head -1 | cut -d \":\" -f 1)\n\n    allSymbols=\"${APMSDKAssetCrashPath}/APMInsightSDKAddressAllSymbols.txt\"\n    if [[ -f \"${allSymbols}\" ]]; then\n        rm \"${allSymbols}\"\n    fi\n    touch \"${allSymbols}\"\n\n    symbolTempFile=\"${APMSDKAssetCrashPath}/APMInsightSDKAddressRangeSymbolTemp.txt\"\n    if [[ -f \"${symbolTempFile}\" ]]; then\n        rm \"${symbolTempFile}\"\n    fi\n    touch \"${symbolTempFile}\"\n\n    sed -n \"${symbolsLineNum},${deadLineNum}p\" $3 > ${allSymbols}\n\n    # 过滤掉 \"literal string:\" \"CFString\" \"objc-cat-list\" \"pointer-to-literal-cstring\" \"_OBJC_IVAR_$_\"\n    grep -v \"0x.*0x.*(literal\\sstring\\:.?|CFString|objc-cat-list|pointer-to-literal-cstring|_OBJC_IVAR_\\$_.*)\" ${allSymbols} > ${symbolTempFile}\n\n    rm \"${allSymbols}\"\n\n    TEXTEND=`date +%s`;\n    TEXTTime=$((TEXTEND-OBJEND))\n    echo \"Grep text section cost $TEXTTime s\"\n\n    # 根据Object file的序号查找symbols\n    regular=\"0000\"\n    count=0\n    while read line\n    do\n        # 拼接的正则表达式过长会导致grep内存溢出\n        count=$[count+1]\n        if [[ $count -ge 500 ]]; then\n            regular=\"${regular})\\]\"\n            grep -E -n \"${regular}\" ${symbolTempFile} >> $symbolFile\n            regular=\"0000\"\n            count=0\n        fi\n\n        serial=`echo ${line} | cut -d \"]\" -f 1 | cut -b 2-`\n        if [[ \"${regular}\" == \"0000\" ]]; then\n            regular=\"0x.*0x.*\\[(\\s?${serial}\"\n        else\n            regular=\"${regular}|\\s?${serial}\"\n        fi\n    done < $objectFile\n    regular=\"${regular})\\]\"\n    grep -E -n \"${regular}\" ${symbolTempFile} >> $symbolFile\n\n    SYBEND=`date +%s`;\n    SYBTime=$((SYBEND-TEXTEND))\n    echo \"Grep SDK symbols cost $SYBTime s\"\n\n    rm \"${symbolTempFile}\"\n\n    # 筛选SDK symbols时导致部分顺序错乱，为了更好地进行地址合并，先排序\n    sort -n -k 1 -t : $symbolFile -o $symbolFile\n\n    SORTEND=`date +%s`;\n    SORTTime=$((SORTEND-SYBEND))\n    echo \"sort SDK symbols cost $SORTTime s\"\n\n    if [[ -f \"${objectFile}\" ]]; then\n        rm \"${objectFile}\"\n    fi\n\n    # 读取文件，合并相邻地址范围，精简结果文件\n    # 判断之前是否写过此种架构，如果写过，先删除这些行\n    startLineNum=0\n    endLineNum=0\n    tempLineNum=0\n    while read line\n    do\n        ((tempLineNum++))\n        if [ \"${line}\" == \"<key>${2}_${4}</key>\" ]\n        then\n            startLineNum=$tempLineNum\n            continue\n        fi\n\n        if [ ! \"$startLineNum\" == 0 ]\n        then\n            if [ \"${line}\" == \"</array>\" ]\n            then\n                endLineNum=$tempLineNum\n                break\n            fi\n        fi\n    done < \"${addressRangeFileName}\"\n    sed -i \"\" \"$startLineNum,${endLineNum}d\" \"${addressRangeFileName}\"\n\n    # 写入plist数组头\n    echo \"<key>${2}_${4}</key>\n<array>\" >> \"${addressRangeFileName}\"\n\n    # 合并地址区间，把symbols拆分到多个文件，并发合并\n    threadCount=10 # 控制该变量可以改变并发量，由于脚本编写逻辑限制，不要超过26\n    linesCount=`awk 'END{print NR}' ${symbolFile}`\n    lineExceptThread=`awk 'BEGIN{printf \"%.2f\\n\",'$linesCount'/'$threadCount'}'`\n    linesCountPerFile=`echo $((${lineExceptThread//.*/+1}))`\n    cd $APMSDKAssetCrashPath\n    split -l ${linesCountPerFile} -a 1 ${symbolFile} AddressMergeTmp_\n\n    for ((i=0;i<${threadCount};i++))\n    do\n    {\n        suffixNum=$[i+97]\n        suffix=$(printf \\\\x`printf %x $suffixNum`)\n        if [[ -f \"AddressMergeTmp_${suffix}\" ]]; then\n            touch \"AddressMerge_$i\"\n            combineAddresses AddressMergeTmp_${suffix} AddressMerge_$i\n            rm \"AddressMergeTmp_${suffix}\"\n        fi\n    }&\n    done\n    wait\n\n    MERGEEND=`date +%s`;\n    MERGETime=$((MERGEEND-SORTEND))\n    echo \"Merge part cost $MERGETime s\"\n\n    startAddress=\"0x0000\"\n    endAddress=\"0x0000\"\n    for ((i=0;i<${threadCount};i++))\n    do\n    {\n        if [[ -f \"AddressMerge_$i\" ]]; then\n            while read line\n            do\n                read tmpStartAddr tmpEndAddr <<< $(echo $(echo ${line} | awk -F \"[: ]\" '{print $2\" \"$3}'))\n\n                if [ \"${startAddress}\" == \"0x0000\" ]\n                then\n                    startAddress=${tmpStartAddr}\n                    endAddress=${tmpEndAddr}\n                else\n                    if [[ $(echo \"${tmpStartAddr}\" | tr '[:upper:]' '[:lower:]') == $(echo \"${endAddress}\" | tr '[:upper:]' '[:lower:]') ]]\n                    then\n                        endAddress=${tmpEndAddr}\n                    else\n                        thisSize=`printf \"0x%08x\" $((${endAddress}-${startAddress}))`\n                        echo \"<string>${startAddress}+${thisSize}</string>\" >> \"${addressRangeFileName}\"\n                        startAddress=${tmpStartAddr}\n                        endAddress=${tmpEndAddr}\n                    fi\n                fi\n            done < \"AddressMerge_$i\"\n            rm \"AddressMerge_$i\"\n        fi\n    }\n    done\n    if [[ ! \"${startAddress}\" == \"0x0000\"  ]]\n    then\n        thisSize=`printf \"0x%08x\" $((${endAddress}-${startAddress}))`\n        echo \"<string>${startAddress}+${thisSize}</string>\" >> \"${addressRangeFileName}\"\n    fi\n\n    MERGEALLEND=`date +%s`;\n    MERGEALLTime=$((MERGEALLEND-MERGEEND))\n    echo \"Merge all cost $MERGEALLTime s\"\n\n    echo \"</array>\" >> \"${addressRangeFileName}\"\n\n    if [[ -f \"${symbolFile}\" ]]; then\n        rm \"${symbolFile}\"\n    fi\n\n}\n\n# Public 请调用此方法写入SDK地址区间\n# $1:SDKName $2:SDKAid\nfunction writeAddressRangeFile(){\n\n    if [[ -z \"$1\" ]] || [[ -z \"$2\" ]]; then\n        echo \"SDKName or SDKAid is empty, return\"\n        return\n    fi\n\n    START=`date +%s`;\n\n    # LINKMAP文件路径\n    if [[ $CURRENT_ARCH == \"undefined_arch\" ]]; then\n        LINKMAP_ARM64=${LD_MAP_FILE_PATH//${CURRENT_ARCH}/arm64}\n        LINKMAP_ARMV7=${LD_MAP_FILE_PATH//${CURRENT_ARCH}/armv7}\n\n        if [[ -z \"$LINKMAP_ARM64\" ]] && [[ -z \"$LINKMAP_ARMV7\" ]]; then\n            echo \"LINKMAP path is empty, return\"\n            return\n        fi\n\n        writeAddressRangeFileFromLinkMap $1 $2 $LINKMAP_ARM64 \"arm64\"\n\n        writeAddressRangeFileFromLinkMap $1 $2 $LINKMAP_ARMV7 \"armv7\"\n    else\n        LINKMAP=${LD_MAP_FILE_PATH}\n\n        if [[ -z \"$LINKMAP\" ]]; then\n            echo \"LINKMAP path is empty, return\"\n            return\n        fi\n\n        writeAddressRangeFileFromLinkMap $1 $2 $LINKMAP $CURRENT_ARCH\n    fi\n\n\n    echo \"SDK $2 write addressRange end\"\n    END=`date +%s`;\n    time=$((END-START))\n    echo \"SDK $2 cost ${time}s\"\n}\n\n# $SDKAid是在APMInsight平台上面申请的APPId，每个Aid输出一个addressRange文件，如果有多个Aid，请对每个Aid调用一次writeAddressRangeFile方法\n# 如果多个SDK归属于同一个aid，则$SDKName中使用'|'把这些SDKName分隔开，即SDKName=\"SDK1|SDK2|SDK3\"\nSDKAid=\"210361\"\nSDKName=\"BDNovelOpenSDK\"\nwriteAddressRangeFile $SDKName $SDKAid\n#在这里添加其他的writeAddressRangeFile方法调用\n#writeAddressRangeFile $SDKName $SDKAid\n\necho \"</dict></plist>\" >> \"${addressRangeFileName}\"\n\n/bin/sh ${PODS_ROOT}/RangersAPM/RangersAPM/APMInsight_DSYMUploader.sh \"210361\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		FC347991278D65D80060E220 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FC2B3F1F2796A3540050C157 /* FeedExploreVC.swift in Sources */,
				FCED6C91278FF245006187CA /* JiugonggeVC.swift in Sources */,
				FCDB9C45278ED2BA00B8BF17 /* Model.swift in Sources */,
				FCBA2BC827911E37006A2D9B /* VideoCardSingle.swift in Sources */,
				FC3479B2278D78B30060E220 /* Utils.swift in Sources */,
				FCD06ED427954FC500767ABE /* ProfileVC.swift in Sources */,
				FC34799D278D65D80060E220 /* ViewController.swift in Sources */,
				FCD06ECB2794FFEE00767ABE /* PushDemoViewController.swift in Sources */,
				FCD06ED227953D5000767ABE /* NewsVCViewController.swift in Sources */,
				FC347999278D65D80060E220 /* AppDelegate.swift in Sources */,
				FCDB9C48278ED7EC00B8BF17 /* ChenjinshiVC.swift in Sources */,
				FCBA2BCA27915C4C006A2D9B /* VideoCard.swift in Sources */,
				FC3479A3278D65D80060E220 /* HNPage.xcdatamodeld in Sources */,
				FCE28E4D27995298000A493B /* NovelSearchResultVC.swift in Sources */,
				FCDB9C50278EF16B00B8BF17 /* MediaTVC.swift in Sources */,
				FC2B3F212796AA300050C157 /* FeedSingleVC.swift in Sources */,
				FCED6C8F278FF12D006187CA /* NovelTVC.swift in Sources */,
				FCDB9C43278EBDE500B8BF17 /* Provider.swift in Sources */,
				FCD06ECF27952C7800767ABE /* FeedTVC.swift in Sources */,
				FC2B3F232796B9910050C157 /* NovelEntranceVC.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		FC3479A6278D65DA0060E220 /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				FC3479A7278D65DA0060E220 /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = "<group>";
		};
		FCDB9C4B278EEEB400B8BF17 /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				FCDB9C4C278EEEB400B8BF17 /* Base */,
			);
			name = Main.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		FC3479AA278D65DA0060E220 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 13.0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		FC3479AB278D65DA0060E220 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 13.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		FC3479AD278D65DA0060E220 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CD0CD9B496FEE3C323E79EEF /* Pods-HNPage.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = HNPage/HNPage.entitlements;
				CODE_SIGN_IDENTITY = "iPhone Developer";
				CODE_SIGN_STYLE = Manual;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = 9NBPJ84FSA;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = HNPage/Info.plist;
				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
				INFOPLIST_KEY_UILaunchStoryboardName = LaunchScreen;
				INFOPLIST_KEY_UIMainStoryboardFile = Main;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				LD_GENERATE_MAP_FILE = NO;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.TijiaoKuaimaerweima.iosapp;
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = DEVELOP;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_OBJC_BRIDGING_HEADER = "HNPage-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		FC3479AE278D65DA0060E220 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 08ADA2DDD73EB1280AC64621 /* Pods-HNPage.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				CODE_SIGN_ENTITLEMENTS = HNPage/HNPage.entitlements;
				CODE_SIGN_IDENTITY = "iPhone Distribution";
				CODE_SIGN_STYLE = Manual;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = 8TXFM7GDVS;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = HNPage/Info.plist;
				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
				INFOPLIST_KEY_UILaunchStoryboardName = LaunchScreen;
				INFOPLIST_KEY_UIMainStoryboardFile = Main;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				LD_GENERATE_MAP_FILE = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.TijiaoKuaimaerweima.iosapp;
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = TijiaoKuaimaerweima;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_OBJC_BRIDGING_HEADER = "HNPage-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		FC347990278D65D80060E220 /* Build configuration list for PBXProject "HNPage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FC3479AA278D65DA0060E220 /* Debug */,
				FC3479AB278D65DA0060E220 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		FC3479AC278D65DA0060E220 /* Build configuration list for PBXNativeTarget "HNPage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FC3479AD278D65DA0060E220 /* Debug */,
				FC3479AE278D65DA0060E220 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCVersionGroup section */
		FC3479A1278D65D80060E220 /* HNPage.xcdatamodeld */ = {
			isa = XCVersionGroup;
			children = (
				FC3479A2278D65D80060E220 /* HNPage.xcdatamodel */,
			);
			currentVersion = FC3479A2278D65D80060E220 /* HNPage.xcdatamodel */;
			path = HNPage.xcdatamodeld;
			sourceTree = "<group>";
			versionGroupType = wrapper.xcdatamodel;
		};
/* End XCVersionGroup section */
	};
	rootObject = FC34798D278D65D80060E220 /* Project object */;
}
